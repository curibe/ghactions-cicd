name: Testing CD/CD with gitgub actions

on: 
  push:
    branches:
      - master
      - dev 

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Show info
        run: echo "Hello World"

  Deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup ssh agent
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/ghkey
          chmod 600 ~/.ssh/ghkey
          cat << EOF >  ~/.ssh/config
          Host staging
            HostName $SSH_HOST
            IdentityFile ~/.ssh/ghkey
            User $SSH_USER
            Port $SSH_PORT
            ForwardAgent yes
          EOF
        env:
          SSH_KEY: ${{ secrets.KEY }}
          SSH_USER: ${{ secrets.USERNAME }}
          SSH_PORT: ${{ secrets.PORT }}
          SSH_HOST: ${{ secrets.HOST }}
      # - name: Setup ssh agent
      #   uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.KEY }} 

      - name: Add know hosts
        run: |
          echo "$SSH_HOST""
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Pulling updates from repo
        env: 
          REPO: /opt/test.actions
        run: |
          ssh staging 'cd /opt/test.actions && git pull origin master'
        # ssh -A -o StrictHostKeyChecking=no ubuntu@3.21.156.236 'cd /opt/test.actions && git pull origin master'
  
      # - name: deploy
      #   uses: appleboy/ssh-action@master
      #   env:
      #     GITHUB_KEY: ${{ secrets.KEY }}
      #     CNT: ${{ github.repository }}
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   with:
      #     host: ${{ secrets.HOST }}
      #     port: ${{ secrets.PORT }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.KEY }}
      #     script_stop: true
      #     envs: GITHUB_KEY,CNT,SSH_AUTH_SOCK
      #     script: |
      #       export GITHUB_KEY="${GITHUB_KEY}"
      #       cd /opt/test.actions
      #       ./deploy.sh
